from __future__ import print_function
import numpy as np

def read_hr(Filename='wannier90_hr.dat', spin='up'):
    """Read wannier90_hr.dat."""
    print('reading '+Filename+ ' ...')
    f=open(Filename,'r')
    data=f.readlines()
    #read hopping matrix
    num_wann = int(data[1])
    nrpts = int(data[2])
    r_hop= np.zeros([num_wann,num_wann], dtype=complex)
    #hop=[]
    #skip n lines of degeneracy of each Wigner-Seitz grid point
    skiplines = int(np.ceil(nrpts / 15.0))
    istart = 3 + skiplines
    deg=[]
    for i in range(3,istart):
        deg.append(np.array([int(j) for j in data[i].split()]))
    deg=np.concatenate(deg,0)

    icount=0
    ii=-1
    Rlatt = []
    hopps = []
    for i in range(istart,len(data)):
        line=data[i].split()
        m = int(line[3]) - 1
        n = int(line[4]) - 1
        r_hop[m,n] = complex(round(float(line[5]),6),round(float(line[6]),6))
        icount+=1
        if(icount % (num_wann*num_wann) == 0):
            ii+=1
            R = np.array([float(x) for x in line[0:3]])
            #hop.append(np.asarray([R,r_hop]))
            #r_hop= np.zeros([num_wann,num_wann], dtype=complex)

            Rlatt.append(R)
            hopps.append(r_hop)
            #hop.append(np.asarray([R,r_hop]))
            r_hop= np.zeros([num_wann,num_wann], dtype=complex)
    Rlatt=np.asarray(Rlatt)
    hopps=np.asarray(hopps)
    deg = np.reshape(deg,[nrpts,1,1])
    hopps=hopps/deg

    hop_spinor = np.zeros([nrpts,2*num_wann,2*num_wann],dtype=complex)
    for i in range(nrpts):
        if spin == 'up':
            shape = np.eye(2)
            shape[1,1] = 0
        elif spin =='dn':
            shape = np.eye(2)
            shape[0,0] = 0
        else:
            exit()
        hop_spinor[i] = np.kron(shape, hopps[i])
        if (Rlatt[i]==0).all():
            indR0 = i
    # print('successfully')
    return hop_spinor,Rlatt,indR0,deg

def write_hr(deg, Rlatt, hop_spinor, Filename='wannier90_hr.dat'):
    '''
    write full hamiltonian.
    '''
    hop_spinor = hop_spinor*deg
    with open(Filename,'w') as f:
        print('generated by wanSOC',file=f)
        print(' '*10+str(hop_spinor.shape[1]),file=f)
        print(' '*9+str(deg.size),file=f)
        for ikpt in range(deg.size//15):
            data = np.array2string(deg.flatten()[ikpt*15:(ikpt+1)*15], precision=1, separator='    ')
            print('    ',end='',file=f)
            print(data[1:-1],file=f)
        if deg.size%15 != 0:
            data = np.array2string(deg.flatten()[-(deg.size%15)::1], precision=1, separator='    ')
            print('    ',end='',file=f)
            print(data[1:-1],file=f)
        for ikpt in range(deg.size):
            for iwan1 in range(hop_spinor.shape[1]):
                for iwan2 in range(hop_spinor.shape[2]):
                    print('%5d %5d %5d %5d %5d %12.6f %12.6f' \
                    %(Rlatt[ikpt,0],Rlatt[ikpt,1],Rlatt[ikpt,2], iwan1+1, iwan2+1,\
                    hop_spinor[ikpt,iwan1,iwan2].real,hop_spinor[ikpt,iwan1,iwan2].imag),file=f)
